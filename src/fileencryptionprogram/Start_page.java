/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package fileencryptionprogram;

import java.awt.Color;
import javax.swing.JFileChooser;
import javax.swing.JPanel;
import javax.swing.JRootPane;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.OutputStream;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.security.InvalidKeyException;
import java.security.KeyFactory;
import java.security.KeyPair;
import java.security.KeyPairGenerator;
import java.security.KeyStore;
import java.security.NoSuchAlgorithmException;
import java.security.PrivateKey;
import java.security.PublicKey;
import java.security.SecureRandom;
import java.security.spec.EncodedKeySpec;
import java.security.spec.InvalidKeySpecException;
import java.security.spec.PKCS8EncodedKeySpec;
import java.security.spec.X509EncodedKeySpec;
import java.util.Base64;
import java.util.HashSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.BadPaddingException;

import javax.crypto.Cipher;
import javax.crypto.CipherInputStream;
import javax.crypto.CipherOutputStream;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.KeyGenerator;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.SecretKey;
import javax.crypto.spec.SecretKeySpec;
import javax.swing.JOptionPane;


/**
 *
 * @author khalid
 */
public class Start_page extends javax.swing.JFrame {
    private File Source_File_AES;
    private File Destination_File_AES;
    private File Key_File_AES;
    
    private File Source_File_RSA;
    private File Destination_File_RSA;
    private File Key_File_RSA;
    
    private int xMouse;
    private int yMouse;
    /**
     * Creates new form Start_page
     */
    public Start_page() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Ciphermode_AES = new javax.swing.ButtonGroup();
        Ciphermode_RSA = new javax.swing.ButtonGroup();
        LEFT_OPTIONS_PANEL = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        Title = new javax.swing.JLabel();
        Title_Image = new javax.swing.JLabel();
        HOME_PANEL = new javax.swing.JPanel();
        Home = new javax.swing.JLabel();
        AES_PANEL = new javax.swing.JPanel();
        AES1 = new javax.swing.JLabel();
        RSA_PANEL = new javax.swing.JPanel();
        RSA = new javax.swing.JLabel();
        TOP_EXIT_PANEL = new javax.swing.JPanel();
        Minimize_Panel = new javax.swing.JPanel();
        Minimize = new javax.swing.JLabel();
        Exit_Panel = new javax.swing.JPanel();
        Exit = new javax.swing.JLabel();
        PAGE_TEMPLATE = new javax.swing.JPanel();
        HOME_PAGE = new javax.swing.JPanel();
        round_Square1 = new fileencryptionprogram.Round_Square();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        round_Square2 = new fileencryptionprogram.Round_Square();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        AES_PAGE = new javax.swing.JPanel();
        round_Square5 = new fileencryptionprogram.Round_Square();
        jLabel22 = new javax.swing.JLabel();
        Generate_key_AES = new fileencryptionprogram.Round_Square();
        jLabel24 = new javax.swing.JLabel();
        round_Square8 = new fileencryptionprogram.Round_Square();
        jLabel25 = new javax.swing.JLabel();
        Encryption_Button_AES = new javax.swing.JRadioButton();
        Decryption_Button_AES = new javax.swing.JRadioButton();
        round_Square6 = new fileencryptionprogram.Round_Square();
        jLabel2 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        Key_location_AES = new javax.swing.JTextField();
        Destination_location_AES = new javax.swing.JTextField();
        Source_location_AES = new javax.swing.JTextField();
        Source_Folder_AES = new javax.swing.JLabel();
        Destination_Folder_AES = new javax.swing.JLabel();
        Key_Folder_AES = new javax.swing.JLabel();
        AES_BEGIN_BUTTON = new fileencryptionprogram.Round_Square();
        jLabel23 = new javax.swing.JLabel();
        RSA_PAGE = new javax.swing.JPanel();
        round_Square7 = new fileencryptionprogram.Round_Square();
        jLabel26 = new javax.swing.JLabel();
        Generate_key_RSA = new fileencryptionprogram.Round_Square();
        jLabel27 = new javax.swing.JLabel();
        round_Square9 = new fileencryptionprogram.Round_Square();
        jLabel28 = new javax.swing.JLabel();
        Encryption_Button_RSA = new javax.swing.JRadioButton();
        Decryption_Button_RSA = new javax.swing.JRadioButton();
        round_Square10 = new fileencryptionprogram.Round_Square();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        Key_location_RSA = new javax.swing.JTextField();
        Destination_location_RSA = new javax.swing.JTextField();
        Source_location_RSA = new javax.swing.JTextField();
        Source_Folder_RSA = new javax.swing.JLabel();
        Destination_Folder_RSA = new javax.swing.JLabel();
        Key_Folder_RSA = new javax.swing.JLabel();
        RSA_BEGIN_BUTTON = new fileencryptionprogram.Round_Square();
        jLabel29 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setLocationByPlatform(true);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        LEFT_OPTIONS_PANEL.setBackground(new java.awt.Color(0, 26, 60));

        jPanel5.setBackground(new java.awt.Color(0, 26, 60));

        Title.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 12)); // NOI18N
        Title.setForeground(new java.awt.Color(255, 255, 255));
        Title.setText("File Encrypter/Decrypter");

        Title_Image.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fileencryptionprogram/icons/Title_icon.png"))); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addComponent(Title_Image)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Title)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(Title, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(Title_Image))
        );

        HOME_PANEL.setBackground(new java.awt.Color(0, 60, 138));
        HOME_PANEL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                HOME_PANELMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                HOME_PANELMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                HOME_PANELMousePressed(evt);
            }
        });

        Home.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        Home.setForeground(new java.awt.Color(255, 255, 255));
        Home.setText("Home");

        javax.swing.GroupLayout HOME_PANELLayout = new javax.swing.GroupLayout(HOME_PANEL);
        HOME_PANEL.setLayout(HOME_PANELLayout);
        HOME_PANELLayout.setHorizontalGroup(
            HOME_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HOME_PANELLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(Home)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        HOME_PANELLayout.setVerticalGroup(
            HOME_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Home, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        AES_PANEL.setBackground(new java.awt.Color(0, 60, 138));
        AES_PANEL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                AES_PANELMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                AES_PANELMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                AES_PANELMousePressed(evt);
            }
        });

        AES1.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        AES1.setForeground(new java.awt.Color(255, 255, 255));
        AES1.setText("AES");

        javax.swing.GroupLayout AES_PANELLayout = new javax.swing.GroupLayout(AES_PANEL);
        AES_PANEL.setLayout(AES_PANELLayout);
        AES_PANELLayout.setHorizontalGroup(
            AES_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AES_PANELLayout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(AES1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        AES_PANELLayout.setVerticalGroup(
            AES_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(AES1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        RSA_PANEL.setBackground(new java.awt.Color(0, 60, 138));
        RSA_PANEL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RSA_PANELMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                RSA_PANELMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                RSA_PANELMouseExited(evt);
            }
        });

        RSA.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        RSA.setForeground(new java.awt.Color(255, 255, 255));
        RSA.setText("RSA");

        javax.swing.GroupLayout RSA_PANELLayout = new javax.swing.GroupLayout(RSA_PANEL);
        RSA_PANEL.setLayout(RSA_PANELLayout);
        RSA_PANELLayout.setHorizontalGroup(
            RSA_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RSA_PANELLayout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(RSA)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        RSA_PANELLayout.setVerticalGroup(
            RSA_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(RSA, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout LEFT_OPTIONS_PANELLayout = new javax.swing.GroupLayout(LEFT_OPTIONS_PANEL);
        LEFT_OPTIONS_PANEL.setLayout(LEFT_OPTIONS_PANELLayout);
        LEFT_OPTIONS_PANELLayout.setHorizontalGroup(
            LEFT_OPTIONS_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(HOME_PANEL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(AES_PANEL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(RSA_PANEL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        LEFT_OPTIONS_PANELLayout.setVerticalGroup(
            LEFT_OPTIONS_PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LEFT_OPTIONS_PANELLayout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(125, 125, 125)
                .addComponent(HOME_PANEL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AES_PANEL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RSA_PANEL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(193, Short.MAX_VALUE))
        );

        getContentPane().add(LEFT_OPTIONS_PANEL, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 160, 480));

        TOP_EXIT_PANEL.setBackground(new java.awt.Color(255, 255, 255));
        TOP_EXIT_PANEL.setForeground(new java.awt.Color(255, 255, 255));
        TOP_EXIT_PANEL.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                TOP_EXIT_PANELMouseDragged(evt);
            }
        });
        TOP_EXIT_PANEL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TOP_EXIT_PANELMousePressed(evt);
            }
        });
        TOP_EXIT_PANEL.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Minimize_Panel.setBackground(new java.awt.Color(255, 255, 255));
        Minimize_Panel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Minimize_PanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Minimize_PanelMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Minimize_PanelMousePressed(evt);
            }
        });

        Minimize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fileencryptionprogram/icons/Minimize_Button.png"))); // NOI18N

        javax.swing.GroupLayout Minimize_PanelLayout = new javax.swing.GroupLayout(Minimize_Panel);
        Minimize_Panel.setLayout(Minimize_PanelLayout);
        Minimize_PanelLayout.setHorizontalGroup(
            Minimize_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Minimize_PanelLayout.createSequentialGroup()
                .addGap(0, 2, Short.MAX_VALUE)
                .addComponent(Minimize))
        );
        Minimize_PanelLayout.setVerticalGroup(
            Minimize_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Minimize_PanelLayout.createSequentialGroup()
                .addComponent(Minimize)
                .addGap(0, 2, Short.MAX_VALUE))
        );

        TOP_EXIT_PANEL.add(Minimize_Panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 0, 20, 20));

        Exit_Panel.setBackground(new java.awt.Color(255, 255, 255));
        Exit_Panel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Exit_PanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Exit_PanelMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Exit_PanelMousePressed(evt);
            }
        });

        Exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fileencryptionprogram/icons/X_Button.png"))); // NOI18N

        javax.swing.GroupLayout Exit_PanelLayout = new javax.swing.GroupLayout(Exit_Panel);
        Exit_Panel.setLayout(Exit_PanelLayout);
        Exit_PanelLayout.setHorizontalGroup(
            Exit_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Exit_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Exit, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        Exit_PanelLayout.setVerticalGroup(
            Exit_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Exit_PanelLayout.createSequentialGroup()
                .addComponent(Exit)
                .addGap(0, 2, Short.MAX_VALUE))
        );

        TOP_EXIT_PANEL.add(Exit_Panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 0, 30, -1));

        getContentPane().add(TOP_EXIT_PANEL, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 0, 600, 20));

        PAGE_TEMPLATE.setLayout(new java.awt.CardLayout());

        HOME_PAGE.setBackground(new java.awt.Color(234, 234, 234));
        HOME_PAGE.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        round_Square1.setBackground(new java.awt.Color(0, 102, 153));
        round_Square1.setRoundBottomLeft(111);
        round_Square1.setRoundBottomRight(111);
        round_Square1.setRoundTopLeft(111);
        round_Square1.setRoundTopRight(111);
        round_Square1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Meiryo UI", 0, 10)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("(Name subject to change)");
        round_Square1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 40, 130, 30));

        jLabel3.setFont(new java.awt.Font("Megrim", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Welcome to File Encypter/Decrypter ");
        round_Square1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 470, 20));

        HOME_PAGE.add(round_Square1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, 500, 80));

        round_Square2.setBackground(new java.awt.Color(0, 102, 153));
        round_Square2.setRoundBottomLeft(90);
        round_Square2.setRoundBottomRight(90);
        round_Square2.setRoundTopLeft(90);
        round_Square2.setRoundTopRight(90);
        round_Square2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Microsoft JhengHei", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 51, 51));
        jLabel4.setText("SAFE");
        round_Square2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 240, -1, 30));

        jLabel5.setFont(new java.awt.Font("Microsoft JhengHei", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("This program allows you to encypt any type of file");
        round_Square2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, 450, 30));

        jLabel6.setFont(new java.awt.Font("Microsoft JhengHei", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("That file  can then be sent through the internet");
        round_Square2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 60, 410, 30));

        jLabel7.setFont(new java.awt.Font("Microsoft JhengHei", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("with guaranteed confidentiality");
        round_Square2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 100, 280, 30));

        jLabel8.setFont(new java.awt.Font("Microsoft JhengHei", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Important note: When a key is generated it's information");
        round_Square2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 500, 30));

        jLabel9.setFont(new java.awt.Font("Microsoft JhengHei", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 51, 51));
        jLabel9.setText("MUST");
        round_Square2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, 60, 30));

        jLabel10.setFont(new java.awt.Font("Microsoft JhengHei", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("be kept confidential. Be sure to deliver this key");
        round_Square2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 210, 470, 30));

        jLabel12.setFont(new java.awt.Font("Microsoft JhengHei", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("to the recipient of your messages through             channels");
        round_Square2.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, 510, 30));

        HOME_PAGE.add(round_Square2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, 550, 280));

        PAGE_TEMPLATE.add(HOME_PAGE, "card2");

        AES_PAGE.setBackground(new java.awt.Color(234, 234, 234));
        AES_PAGE.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        round_Square5.setBackground(new java.awt.Color(0, 102, 153));
        round_Square5.setRoundBottomLeft(111);
        round_Square5.setRoundBottomRight(111);
        round_Square5.setRoundTopLeft(111);
        round_Square5.setRoundTopRight(111);
        round_Square5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel22.setFont(new java.awt.Font("Megrim", 1, 24)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("AES ALGORITHM");
        round_Square5.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 190, 20));

        AES_PAGE.add(round_Square5, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 10, 220, 60));

        Generate_key_AES.setBackground(new java.awt.Color(246, 8, 82));
        Generate_key_AES.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Generate_key_AESMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Generate_key_AESMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                Generate_key_AESMouseReleased(evt);
            }
        });
        Generate_key_AES.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel24.setFont(new java.awt.Font("Megrim", 1, 24)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("Generate KEY");
        Generate_key_AES.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 170, 20));

        round_Square8.setBackground(new java.awt.Color(246, 8, 82));
        round_Square8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel25.setFont(new java.awt.Font("Megrim", 1, 24)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("Generate KEY");
        round_Square8.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 170, 20));

        Generate_key_AES.add(round_Square8, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 100, 220, 60));

        AES_PAGE.add(Generate_key_AES, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 100, 220, 60));

        Ciphermode_AES.add(Encryption_Button_AES);
        Encryption_Button_AES.setText("Encryption");
        Encryption_Button_AES.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Encryption_Button_AESActionPerformed(evt);
            }
        });
        AES_PAGE.add(Encryption_Button_AES, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 230, -1, -1));

        Ciphermode_AES.add(Decryption_Button_AES);
        Decryption_Button_AES.setText("Decryption");
        AES_PAGE.add(Decryption_Button_AES, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 230, -1, -1));

        round_Square6.setBackground(new java.awt.Color(1, 13, 29));

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Key:");

        jLabel11.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Source: ");

        jLabel13.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Destination: ");

        Key_location_AES.setEditable(false);
        Key_location_AES.setBackground(new java.awt.Color(33, 63, 135));
        Key_location_AES.setForeground(new java.awt.Color(255, 255, 255));
        Key_location_AES.setToolTipText("");
        Key_location_AES.setBorder(null);
        Key_location_AES.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Key_location_AESActionPerformed(evt);
            }
        });

        Destination_location_AES.setEditable(false);
        Destination_location_AES.setBackground(new java.awt.Color(33, 63, 135));
        Destination_location_AES.setForeground(new java.awt.Color(255, 255, 255));
        Destination_location_AES.setToolTipText("");
        Destination_location_AES.setBorder(null);

        Source_location_AES.setEditable(false);
        Source_location_AES.setBackground(new java.awt.Color(33, 63, 135));
        Source_location_AES.setForeground(new java.awt.Color(255, 255, 255));
        Source_location_AES.setToolTipText("");
        Source_location_AES.setBorder(null);

        Source_Folder_AES.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fileencryptionprogram/icons/Folder.png"))); // NOI18N
        Source_Folder_AES.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Source_Folder_AESMouseClicked(evt);
            }
        });

        Destination_Folder_AES.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fileencryptionprogram/icons/Folder.png"))); // NOI18N
        Destination_Folder_AES.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Destination_Folder_AESMouseClicked(evt);
            }
        });

        Key_Folder_AES.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fileencryptionprogram/icons/Folder.png"))); // NOI18N
        Key_Folder_AES.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Key_Folder_AESMouseClicked(evt);
            }
        });

        AES_BEGIN_BUTTON.setBackground(new java.awt.Color(0, 39, 92));
        AES_BEGIN_BUTTON.setRoundBottomLeft(60);
        AES_BEGIN_BUTTON.setRoundBottomRight(60);
        AES_BEGIN_BUTTON.setRoundTopLeft(60);
        AES_BEGIN_BUTTON.setRoundTopRight(60);
        AES_BEGIN_BUTTON.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AES_BEGIN_BUTTONMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                AES_BEGIN_BUTTONMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                AES_BEGIN_BUTTONMouseReleased(evt);
            }
        });
        AES_BEGIN_BUTTON.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel23.setBackground(new java.awt.Color(1, 13, 29));
        jLabel23.setFont(new java.awt.Font("Lucida Fax", 1, 18)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("Begin!");
        AES_BEGIN_BUTTON.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 0, 80, 30));

        javax.swing.GroupLayout round_Square6Layout = new javax.swing.GroupLayout(round_Square6);
        round_Square6.setLayout(round_Square6Layout);
        round_Square6Layout.setHorizontalGroup(
            round_Square6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(round_Square6Layout.createSequentialGroup()
                .addGroup(round_Square6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(round_Square6Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel11))
                    .addGroup(round_Square6Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel13))
                    .addGroup(round_Square6Layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(round_Square6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(round_Square6Layout.createSequentialGroup()
                        .addComponent(Key_location_AES, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Key_Folder_AES))
                    .addGroup(round_Square6Layout.createSequentialGroup()
                        .addComponent(Destination_location_AES, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Destination_Folder_AES))
                    .addGroup(round_Square6Layout.createSequentialGroup()
                        .addComponent(Source_location_AES, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Source_Folder_AES)))
                .addContainerGap(54, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, round_Square6Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(AES_BEGIN_BUTTON, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(217, 217, 217))
        );
        round_Square6Layout.setVerticalGroup(
            round_Square6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(round_Square6Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(round_Square6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(round_Square6Layout.createSequentialGroup()
                        .addGroup(round_Square6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(round_Square6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel11)
                                .addComponent(Source_location_AES, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(Source_Folder_AES, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(round_Square6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(Destination_location_AES, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(Destination_Folder_AES, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(round_Square6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(round_Square6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(Key_location_AES, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Key_Folder_AES, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(AES_BEGIN_BUTTON, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        AES_PAGE.add(round_Square6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 560, 200));

        PAGE_TEMPLATE.add(AES_PAGE, "card2");

        RSA_PAGE.setBackground(new java.awt.Color(234, 234, 234));
        RSA_PAGE.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        round_Square7.setBackground(new java.awt.Color(0, 102, 153));
        round_Square7.setRoundBottomLeft(111);
        round_Square7.setRoundBottomRight(111);
        round_Square7.setRoundTopLeft(111);
        round_Square7.setRoundTopRight(111);
        round_Square7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel26.setFont(new java.awt.Font("Megrim", 1, 24)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("rsa ALGORITHM");
        round_Square7.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 190, 20));

        RSA_PAGE.add(round_Square7, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 10, 220, 60));

        Generate_key_RSA.setBackground(new java.awt.Color(246, 8, 82));
        Generate_key_RSA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Generate_key_RSAMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Generate_key_RSAMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                Generate_key_RSAMouseReleased(evt);
            }
        });
        Generate_key_RSA.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel27.setFont(new java.awt.Font("Megrim", 1, 24)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setText("Generate KEYS");
        Generate_key_RSA.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 180, 20));

        round_Square9.setBackground(new java.awt.Color(246, 8, 82));
        round_Square9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel28.setFont(new java.awt.Font("Megrim", 1, 24)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 255, 255));
        jLabel28.setText("Generate KEY");
        round_Square9.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 170, 20));

        Generate_key_RSA.add(round_Square9, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 100, 220, 60));

        RSA_PAGE.add(Generate_key_RSA, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 100, 220, 60));

        Ciphermode_RSA.add(Encryption_Button_RSA);
        Encryption_Button_RSA.setText("Encryption");
        Encryption_Button_RSA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Encryption_Button_RSAActionPerformed(evt);
            }
        });
        RSA_PAGE.add(Encryption_Button_RSA, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 230, -1, -1));

        Ciphermode_RSA.add(Decryption_Button_RSA);
        Decryption_Button_RSA.setText("Decryption");
        RSA_PAGE.add(Decryption_Button_RSA, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 230, -1, -1));

        round_Square10.setBackground(new java.awt.Color(1, 13, 29));

        jLabel14.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Key:");

        jLabel15.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Source: ");

        jLabel16.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Destination: ");

        Key_location_RSA.setEditable(false);
        Key_location_RSA.setBackground(new java.awt.Color(33, 63, 135));
        Key_location_RSA.setForeground(new java.awt.Color(255, 255, 255));
        Key_location_RSA.setToolTipText("");
        Key_location_RSA.setBorder(null);
        Key_location_RSA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Key_location_RSAActionPerformed(evt);
            }
        });

        Destination_location_RSA.setEditable(false);
        Destination_location_RSA.setBackground(new java.awt.Color(33, 63, 135));
        Destination_location_RSA.setForeground(new java.awt.Color(255, 255, 255));
        Destination_location_RSA.setToolTipText("");
        Destination_location_RSA.setBorder(null);

        Source_location_RSA.setEditable(false);
        Source_location_RSA.setBackground(new java.awt.Color(33, 63, 135));
        Source_location_RSA.setForeground(new java.awt.Color(255, 255, 255));
        Source_location_RSA.setToolTipText("");
        Source_location_RSA.setBorder(null);

        Source_Folder_RSA.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fileencryptionprogram/icons/Folder.png"))); // NOI18N
        Source_Folder_RSA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Source_Folder_RSAMouseClicked(evt);
            }
        });

        Destination_Folder_RSA.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fileencryptionprogram/icons/Folder.png"))); // NOI18N
        Destination_Folder_RSA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Destination_Folder_RSAMouseClicked(evt);
            }
        });

        Key_Folder_RSA.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fileencryptionprogram/icons/Folder.png"))); // NOI18N
        Key_Folder_RSA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Key_Folder_RSAMouseClicked(evt);
            }
        });

        RSA_BEGIN_BUTTON.setBackground(new java.awt.Color(0, 39, 92));
        RSA_BEGIN_BUTTON.setRoundBottomLeft(60);
        RSA_BEGIN_BUTTON.setRoundBottomRight(60);
        RSA_BEGIN_BUTTON.setRoundTopLeft(60);
        RSA_BEGIN_BUTTON.setRoundTopRight(60);
        RSA_BEGIN_BUTTON.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RSA_BEGIN_BUTTONMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                RSA_BEGIN_BUTTONMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                RSA_BEGIN_BUTTONMouseReleased(evt);
            }
        });
        RSA_BEGIN_BUTTON.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel29.setBackground(new java.awt.Color(1, 13, 29));
        jLabel29.setFont(new java.awt.Font("Lucida Fax", 1, 18)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setText("Begin!");
        RSA_BEGIN_BUTTON.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 0, 80, 30));

        javax.swing.GroupLayout round_Square10Layout = new javax.swing.GroupLayout(round_Square10);
        round_Square10.setLayout(round_Square10Layout);
        round_Square10Layout.setHorizontalGroup(
            round_Square10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(round_Square10Layout.createSequentialGroup()
                .addGroup(round_Square10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(round_Square10Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel15))
                    .addGroup(round_Square10Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel16))
                    .addGroup(round_Square10Layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(jLabel14)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(round_Square10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(round_Square10Layout.createSequentialGroup()
                        .addComponent(Key_location_RSA, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Key_Folder_RSA))
                    .addGroup(round_Square10Layout.createSequentialGroup()
                        .addComponent(Destination_location_RSA, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Destination_Folder_RSA))
                    .addGroup(round_Square10Layout.createSequentialGroup()
                        .addComponent(Source_location_RSA, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Source_Folder_RSA)))
                .addContainerGap(54, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, round_Square10Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(RSA_BEGIN_BUTTON, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(217, 217, 217))
        );
        round_Square10Layout.setVerticalGroup(
            round_Square10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(round_Square10Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(round_Square10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(round_Square10Layout.createSequentialGroup()
                        .addGroup(round_Square10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(round_Square10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel15)
                                .addComponent(Source_location_RSA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(Source_Folder_RSA, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(round_Square10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(Destination_location_RSA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(Destination_Folder_RSA, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(round_Square10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(round_Square10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel14)
                        .addComponent(Key_location_RSA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Key_Folder_RSA, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(RSA_BEGIN_BUTTON, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        RSA_PAGE.add(round_Square10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 560, 200));

        PAGE_TEMPLATE.add(RSA_PAGE, "card2");

        getContentPane().add(PAGE_TEMPLATE, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 20, 600, 460));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Minimize_PanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Minimize_PanelMouseEntered
          
//This will highlight the minimize button red when the mouse hovers over it
        JPanel parent = (JPanel)evt.getSource();  
        parent.setBackground(Color.red);
        parent.revalidate();
    }//GEN-LAST:event_Minimize_PanelMouseEntered

    private void Minimize_PanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Minimize_PanelMouseExited
        //This will highlight the minimize button White when the mouse is no longer hovering over it
        JPanel parent = (JPanel)evt.getSource();  
        parent.setBackground(Color.WHITE);
        parent.revalidate();
    }//GEN-LAST:event_Minimize_PanelMouseExited

    private void Exit_PanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Exit_PanelMouseEntered
        //This will highlight the Exit button red when the mouse hovers over it
        JPanel parent = (JPanel)evt.getSource();  
        parent.setBackground(Color.red);
        parent.revalidate();
    }//GEN-LAST:event_Exit_PanelMouseEntered

    private void Exit_PanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Exit_PanelMouseExited
        //This will highlight the Exit button White when the mouse is no longer hovering over it
        JPanel parent = (JPanel)evt.getSource();  
        parent.setBackground(Color.WHITE);
        parent.revalidate();
    }//GEN-LAST:event_Exit_PanelMouseExited

    private void Exit_PanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Exit_PanelMousePressed
        dispose();
    }//GEN-LAST:event_Exit_PanelMousePressed

    private void Minimize_PanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Minimize_PanelMousePressed
        this.setExtendedState(Start_page.ICONIFIED);
    }//GEN-LAST:event_Minimize_PanelMousePressed

    private void HOME_PANELMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HOME_PANELMouseEntered
        JPanel parent = (JPanel)evt.getSource();  
        parent.setBackground(Color.CYAN);
        parent.revalidate();
    }//GEN-LAST:event_HOME_PANELMouseEntered

    private void HOME_PANELMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HOME_PANELMouseExited
        JPanel parent = (JPanel)evt.getSource();  
        parent.setBackground(new Color(0, 60, 138));
        parent.revalidate();
    }//GEN-LAST:event_HOME_PANELMouseExited

    private void AES_PANELMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AES_PANELMouseEntered
        JPanel parent = (JPanel)evt.getSource();  
        parent.setBackground(Color.CYAN);
        parent.revalidate();
    }//GEN-LAST:event_AES_PANELMouseEntered

    private void AES_PANELMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AES_PANELMouseExited
        JPanel parent = (JPanel)evt.getSource();  
        parent.setBackground(new Color(0, 60, 138));
        parent.revalidate();
    }//GEN-LAST:event_AES_PANELMouseExited

    private void RSA_PANELMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RSA_PANELMouseEntered
        JPanel parent = (JPanel)evt.getSource();  
        parent.setBackground(Color.CYAN);
        parent.revalidate();
    }//GEN-LAST:event_RSA_PANELMouseEntered

    private void RSA_PANELMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RSA_PANELMouseExited
        JPanel parent = (JPanel)evt.getSource();  
        parent.setBackground(new Color(0, 60, 138));
        parent.revalidate();
    }//GEN-LAST:event_RSA_PANELMouseExited

    private void AES_PANELMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AES_PANELMousePressed
        //Remove all panels
        PAGE_TEMPLATE.removeAll();
        PAGE_TEMPLATE.repaint();
        PAGE_TEMPLATE.revalidate();
        //Add panels and reset input
        
        Key_location_AES.setText("");
        Source_location_AES.setText("");
        Destination_location_AES.setText("");
        Ciphermode_AES.clearSelection();
        
        
        PAGE_TEMPLATE.add(AES_PAGE);
        PAGE_TEMPLATE.repaint();
        PAGE_TEMPLATE.revalidate();
    }//GEN-LAST:event_AES_PANELMousePressed

    private void HOME_PANELMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HOME_PANELMousePressed
        //Remove all panels
        PAGE_TEMPLATE.removeAll();
        PAGE_TEMPLATE.repaint();
        PAGE_TEMPLATE.revalidate();
        //Add panels
        PAGE_TEMPLATE.add(HOME_PAGE);
        PAGE_TEMPLATE.repaint();
        PAGE_TEMPLATE.revalidate();
    }//GEN-LAST:event_HOME_PANELMousePressed

    private void Encryption_Button_AESActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Encryption_Button_AESActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Encryption_Button_AESActionPerformed

    private void Key_location_AESActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Key_location_AESActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Key_location_AESActionPerformed

    private void Source_Folder_AESMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Source_Folder_AESMouseClicked
        JFileChooser filechooser = new JFileChooser();
        int response =filechooser.showOpenDialog(null);
        
        if(response == JFileChooser.APPROVE_OPTION){
            Source_location_AES.setText(filechooser.getSelectedFile().toString());
        }
    }//GEN-LAST:event_Source_Folder_AESMouseClicked

    private void Destination_Folder_AESMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Destination_Folder_AESMouseClicked
        final JFileChooser filechooser = new JFileChooser();
        filechooser.setFileSelectionMode(filechooser.DIRECTORIES_ONLY);
        int response =filechooser.showOpenDialog(null);
        
        if(response == JFileChooser.APPROVE_OPTION){
            Destination_location_AES.setText(filechooser.getSelectedFile().toString());
        }
    }//GEN-LAST:event_Destination_Folder_AESMouseClicked

    private void Key_Folder_AESMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Key_Folder_AESMouseClicked
        JFileChooser filechooser = new JFileChooser();
        int response =filechooser.showOpenDialog(null);
        
        if(response == JFileChooser.APPROVE_OPTION){
            Key_location_AES.setText(filechooser.getSelectedFile().toString());
        }
    }//GEN-LAST:event_Key_Folder_AESMouseClicked

    private void Generate_key_AESMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Generate_key_AESMouseClicked
        
        try {
            KeyGenerator keyGenerator = KeyGenerator.getInstance("AES");
            keyGenerator.init(256);
            SecretKey mykey = keyGenerator.generateKey(); 
            
            
        JFileChooser filechooser = new JFileChooser();
        filechooser.setFileSelectionMode(filechooser.DIRECTORIES_ONLY);
        int response =filechooser.showSaveDialog(null);
        
        if(response == JFileChooser.APPROVE_OPTION){
            Key_File_AES= new File(filechooser.getSelectedFile().toString() + "\\SecretKey.key");
            FileOutputStream fos = new FileOutputStream(Key_File_AES);
            fos.write(mykey.getEncoded());
            fos.close();
            Key_location_AES.setText(filechooser.getSelectedFile().toString() + "\\SecretKey.key");
            JOptionPane.showMessageDialog(this,"Generation Complete");
        }
            
            


              
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(Start_page.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Start_page.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Start_page.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(Start_page.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Generate_key_AESMouseClicked

    private void Generate_key_AESMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Generate_key_AESMousePressed
        JPanel parent = (JPanel)evt.getSource();  
        parent.setBackground(new Color(116, 0, 36));
        parent.revalidate();
    }//GEN-LAST:event_Generate_key_AESMousePressed

    private void Generate_key_AESMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Generate_key_AESMouseReleased
        JPanel parent = (JPanel)evt.getSource();  
        parent.setBackground(new Color(246, 8, 82));
        parent.revalidate();
    }//GEN-LAST:event_Generate_key_AESMouseReleased

    private void AES_BEGIN_BUTTONMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AES_BEGIN_BUTTONMouseClicked
            
        Encryption_Button_AES.setActionCommand(Encryption_Button_AES.getText());
        Decryption_Button_AES.setActionCommand(Decryption_Button_AES.getText());

            
       if((Encryption_Button_AES.isSelected() || Decryption_Button_AES.isSelected())==true &&  !Key_location_AES.getText().equals("") 
               && !Destination_location_AES.getText().equals("") && !Source_location_AES.getText().equals(""))
       {   
           
       FileInputStream fis=null;
       FileOutputStream fos=null;
        try {

            String CipherMode = Ciphermode_AES.getSelection().getActionCommand();
            
            Source_File_AES = new File(Source_location_AES.getText());
            
            if(CipherMode.equals("Encryption")){
            Destination_File_AES= new File(Destination_location_AES.getText() + "\\Encrypted_" + Source_File_AES.getName());
            }
            else if(CipherMode.equals("Decryption"))
            Destination_File_AES= new File(Destination_location_AES.getText() + "\\Decrypted_" + Source_File_AES.getName()); 
            
            
            Key_File_AES = new File(Key_location_AES.getText());
            
            
            
            fis = new FileInputStream(Source_File_AES);
            fos=new FileOutputStream(Destination_File_AES);
            


            byte[] KeyBytes = Files.readAllBytes(Key_File_AES.toPath());      
            SecretKey mykey = new SecretKeySpec(KeyBytes, "AES");

            

            
            Cipher cipher =null;
            if(CipherMode.equals("Encryption")){
                
                long start = System.nanoTime();
                cipher = javax.crypto.Cipher.getInstance("AES/ECB/PKCS5Padding");
                cipher.init(javax.crypto.Cipher.ENCRYPT_MODE,mykey,SecureRandom.getInstance("SHA1PRNG"));
                CipherInputStream cis = new CipherInputStream(fis, cipher);
                long end = System.nanoTime();
                
                System.out.println("TIME SPENT: AES_ENCRYPTION:" + (end - start)/1000000.0);
                write(cis, fos);
                JOptionPane.showMessageDialog(this,"Encryption Complete");
            }
            else if(CipherMode.equals("Decryption")){
                
                long start = System.nanoTime();                
                cipher = javax.crypto.Cipher.getInstance("AES/ECB/PKCS5Padding");                
                cipher.init(javax.crypto.Cipher.DECRYPT_MODE,mykey,SecureRandom.getInstance("SHA1PRNG"));
                CipherOutputStream cos = new CipherOutputStream(fos, cipher);
                long end = System.nanoTime();    
                System.out.println("TIME SPENT: AES_DECRYPTION:" + (end - start)/1000000.0); 
                
                write(fis, cos);
                JOptionPane.showMessageDialog(this,"Decryption Complete");
                
                
            }} catch (FileNotFoundException ex) {
            Logger.getLogger(Start_page.class.getName()).log(Level.SEVERE, "1", ex);
        } catch (IOException ex) {
            Logger.getLogger(Start_page.class.getName()).log(Level.SEVERE, "2", ex);
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(Start_page.class.getName()).log(Level.SEVERE, "4", ex);
        } catch (NoSuchPaddingException ex) {
            Logger.getLogger(Start_page.class.getName()).log(Level.SEVERE, "5", ex);
        } catch (InvalidKeyException ex) {
            Logger.getLogger(Start_page.class.getName()).log(Level.SEVERE, "6", ex);
        } catch (Exception ex) {
            Logger.getLogger(Start_page.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                fis.close();
                fos.close();
            } catch (IOException ex) {
                Logger.getLogger(Start_page.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
       }
       else
       JOptionPane.showMessageDialog(this,"Fill in all the required data"); 
        
    }//GEN-LAST:event_AES_BEGIN_BUTTONMouseClicked

    private void AES_BEGIN_BUTTONMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AES_BEGIN_BUTTONMousePressed
        JPanel parent = (JPanel)evt.getSource();  
        parent.setBackground(new Color(0, 39, 92));
        parent.revalidate();
    }//GEN-LAST:event_AES_BEGIN_BUTTONMousePressed

    private void AES_BEGIN_BUTTONMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AES_BEGIN_BUTTONMouseReleased
        JPanel parent = (JPanel)evt.getSource();  
        parent.setBackground(new Color(0, 70, 165));
        parent.revalidate();
    }//GEN-LAST:event_AES_BEGIN_BUTTONMouseReleased

    private void TOP_EXIT_PANELMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TOP_EXIT_PANELMouseDragged
        this.setLocation(evt.getXOnScreen()-xMouse,evt.getYOnScreen()-yMouse);
    }//GEN-LAST:event_TOP_EXIT_PANELMouseDragged

    private void TOP_EXIT_PANELMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TOP_EXIT_PANELMousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_TOP_EXIT_PANELMousePressed

    private void Generate_key_RSAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Generate_key_RSAMouseClicked
        
        try {
            KeyPairGenerator generator = KeyPairGenerator.getInstance("RSA");
            generator.initialize(2048);
            KeyPair pair = generator.generateKeyPair();
            PrivateKey privateKey = pair.getPrivate();
            PublicKey publicKey = pair.getPublic();
            
        JFileChooser filechooser = new JFileChooser();
        filechooser.setFileSelectionMode(filechooser.DIRECTORIES_ONLY);
        int response =filechooser.showSaveDialog(null);
        
        if(response == JFileChooser.APPROVE_OPTION){
            
            Key_File_RSA= new File(filechooser.getSelectedFile().toString() + "\\PublicKey.key");
            FileOutputStream fos = new FileOutputStream(Key_File_RSA);
            fos.write(publicKey.getEncoded());
            fos.close();
            
            Key_File_RSA= new File(filechooser.getSelectedFile().toString() + "\\PrivateKey.key");
            fos = new FileOutputStream(Key_File_RSA);
            fos.write(privateKey.getEncoded());
            fos.close();
            

            JOptionPane.showMessageDialog(this,"Generation Complete");
        }
            
            


              
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(Start_page.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Start_page.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Start_page.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(Start_page.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Generate_key_RSAMouseClicked

    private void Generate_key_RSAMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Generate_key_RSAMousePressed
        JPanel parent = (JPanel)evt.getSource();  
        parent.setBackground(new Color(116, 0, 36));
        parent.revalidate();
    }//GEN-LAST:event_Generate_key_RSAMousePressed

    private void Generate_key_RSAMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Generate_key_RSAMouseReleased
        JPanel parent = (JPanel)evt.getSource();  
        parent.setBackground(new Color(246, 8, 82));
        parent.revalidate();
    }//GEN-LAST:event_Generate_key_RSAMouseReleased

    private void Encryption_Button_RSAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Encryption_Button_RSAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Encryption_Button_RSAActionPerformed

    private void Key_location_RSAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Key_location_RSAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Key_location_RSAActionPerformed

    private void Source_Folder_RSAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Source_Folder_RSAMouseClicked
        JFileChooser filechooser = new JFileChooser();
        int response =filechooser.showOpenDialog(null);
        
        if(response == JFileChooser.APPROVE_OPTION){
            Source_location_RSA.setText(filechooser.getSelectedFile().toString());
        }
    }//GEN-LAST:event_Source_Folder_RSAMouseClicked

    private void Destination_Folder_RSAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Destination_Folder_RSAMouseClicked
        final JFileChooser filechooser = new JFileChooser();
        filechooser.setFileSelectionMode(filechooser.DIRECTORIES_ONLY);
        int response =filechooser.showOpenDialog(null);
        
        if(response == JFileChooser.APPROVE_OPTION){
            Destination_location_RSA.setText(filechooser.getSelectedFile().toString());
        }
            
    }//GEN-LAST:event_Destination_Folder_RSAMouseClicked

    private void Key_Folder_RSAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Key_Folder_RSAMouseClicked
        JFileChooser filechooser = new JFileChooser();
        int response =filechooser.showOpenDialog(null);
        
        if(response == JFileChooser.APPROVE_OPTION){
            Key_location_RSA.setText(filechooser.getSelectedFile().toString());
        }
    }//GEN-LAST:event_Key_Folder_RSAMouseClicked

    private void RSA_BEGIN_BUTTONMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RSA_BEGIN_BUTTONMouseClicked
       
        
         PublicKey publickey=null;
         PrivateKey privatekey=null;
        Encryption_Button_RSA.setActionCommand(Encryption_Button_RSA.getText());
        Decryption_Button_RSA.setActionCommand(Decryption_Button_RSA.getText());

            
       if((Encryption_Button_RSA.isSelected() || Decryption_Button_RSA.isSelected())==true &&  !Key_location_RSA.getText().equals("") 
               && !Destination_location_RSA.getText().equals("") && !Source_location_RSA.getText().equals(""))
       {   
           

            try {
                String CipherMode = Ciphermode_RSA.getSelection().getActionCommand();
                
                Source_File_RSA = new File(Source_location_RSA.getText());
                
                if(CipherMode.equals("Encryption")){
                    Destination_File_RSA= new File(Destination_location_RSA.getText() + "\\Encrypted_" + Source_File_RSA.getName());


                }
                else if(CipherMode.equals("Decryption"))
                    Destination_File_RSA= new File(Destination_location_RSA.getText() + "\\Decrypted_" + Source_File_RSA.getName());
                
                

                    Key_File_RSA = new File(Key_location_RSA.getText());
                    byte[] KeyBytes = Files.readAllBytes(Key_File_RSA.toPath());
                    KeyFactory keyFactory = KeyFactory.getInstance("RSA");

                    
                    if(CipherMode.equals("Encryption"))
                        
                        publickey = keyFactory.generatePublic(new X509EncodedKeySpec(KeyBytes));
                    else
                        privatekey = keyFactory.generatePrivate(new PKCS8EncodedKeySpec(KeyBytes));
                    
                    


                
                byte[] fileBytes = Files.readAllBytes(Paths.get(Source_File_RSA.getAbsolutePath()));
                
                if(CipherMode.equals("Encryption")){
                    
                long start = System.nanoTime();
                Cipher encryptCipher = Cipher.getInstance("RSA");
                encryptCipher.init(Cipher.ENCRYPT_MODE, publickey);
                byte[] encryptedFileBytes = encryptCipher.doFinal(fileBytes);
                FileOutputStream stream = new FileOutputStream(Destination_File_RSA);
                long end = System.nanoTime();
                System.out.println("TIME SPENT: RSA_ENCRYPTION:" + (end - start)/1000000.0);
                
                stream.write(encryptedFileBytes);
                stream.close();
                JOptionPane.showMessageDialog(this,"Encryption Complete");
                
                }
                else if(CipherMode.equals("Decryption")){
                    
                long start = System.nanoTime();                    
                Cipher decryptCipher = Cipher.getInstance("RSA");
                decryptCipher.init(Cipher.DECRYPT_MODE, privatekey);
                byte[] decryptedFileBytes = decryptCipher.doFinal(fileBytes);
                FileOutputStream stream = new FileOutputStream(Destination_File_RSA);                
                long end = System.nanoTime();
                System.out.println("TIME SPENT RSA_DECRYPTION: " + (end - start)/1000000.0);
                
                stream.write(decryptedFileBytes);
                stream.close();   
                JOptionPane.showMessageDialog(this,"Decryption Complete");                    
                    
                }
                
                
                
            } catch (IOException ex) {
                Logger.getLogger(Start_page.class.getName()).log(Level.SEVERE, "IOEXCEPTION", ex);
            } catch (NoSuchAlgorithmException ex) {
                Logger.getLogger(Start_page.class.getName()).log(Level.SEVERE, "WrongAlgorithm", ex);
            } catch (InvalidKeySpecException ex) {
                Logger.getLogger(Start_page.class.getName()).log(Level.SEVERE, null, ex);
            } catch (NoSuchPaddingException ex) {
                Logger.getLogger(Start_page.class.getName()).log(Level.SEVERE, null, ex);
            } catch (InvalidKeyException ex) {
                 Logger.getLogger(Start_page.class.getName()).log(Level.SEVERE, null, ex);
             } catch (IllegalBlockSizeException ex) {
                 Logger.getLogger(Start_page.class.getName()).log(Level.SEVERE, null, ex);
             } catch (BadPaddingException ex) {
                 Logger.getLogger(Start_page.class.getName()).log(Level.SEVERE, null, ex);
             }
            


       }
       else
       JOptionPane.showMessageDialog(this,"Fill in all the required data");       
    }//GEN-LAST:event_RSA_BEGIN_BUTTONMouseClicked

    private void RSA_BEGIN_BUTTONMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RSA_BEGIN_BUTTONMousePressed
        JPanel parent = (JPanel)evt.getSource();  
        parent.setBackground(new Color(0, 39, 92));
        parent.revalidate();
    }//GEN-LAST:event_RSA_BEGIN_BUTTONMousePressed

    private void RSA_BEGIN_BUTTONMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RSA_BEGIN_BUTTONMouseReleased
        JPanel parent = (JPanel)evt.getSource();  
        parent.setBackground(new Color(0, 70, 165));
        parent.revalidate();
    }//GEN-LAST:event_RSA_BEGIN_BUTTONMouseReleased

    private void RSA_PANELMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RSA_PANELMouseClicked
        //Remove all panels
        PAGE_TEMPLATE.removeAll();
        PAGE_TEMPLATE.repaint();
        PAGE_TEMPLATE.revalidate();
        //Add panels and reset input
        
        Key_location_RSA.setText("");
        Source_location_RSA.setText("");
        Destination_location_RSA.setText("");
        Ciphermode_RSA.clearSelection();
        
        
        PAGE_TEMPLATE.add(RSA_PAGE);
        PAGE_TEMPLATE.repaint();
        PAGE_TEMPLATE.revalidate();
    }//GEN-LAST:event_RSA_PANELMouseClicked

    
    
    private static void write(InputStream in, OutputStream out) throws IOException{
        byte[] buffer = new byte[64];
        int numofBytesRead;
        while((numofBytesRead = in.read(buffer)) != -1){
                out.write(buffer,0,numofBytesRead);
        }
        out.close();
        in.close();
    }

    
    private static void StoreKey(SecretKey key, String password, File inputfile)throws Exception{
    
    File file = new File (inputfile.getAbsolutePath());
    KeyStore mykeystore = KeyStore.getInstance("JCEKS");
    
    if(file.exists()){
        file.delete();
    }
    
    
    mykeystore.load(null,null);
    mykeystore.setKeyEntry("keyAlias", key, password.toCharArray(),null);
    OutputStream writestream = new FileOutputStream(inputfile);
    mykeystore.store(writestream,password.toCharArray());
    
    }
    
    private static SecretKey LoadKey(File inputfile,String password)throws Exception{
    
        try{
       KeyStore keystore = KeyStore.getInstance("JCEKS");
       InputStream readstream = new FileInputStream(inputfile);
       keystore.load(readstream,password.toCharArray());
       SecretKey key = (SecretKey)keystore.getKey("keyAlias", password.toCharArray());
       return key;
        }
        catch(Exception e){
        System.out.println(e);
        }
        return null;
    
    
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Start_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Start_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Start_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Start_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Start_page().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AES1;
    private fileencryptionprogram.Round_Square AES_BEGIN_BUTTON;
    private javax.swing.JPanel AES_PAGE;
    private javax.swing.JPanel AES_PANEL;
    private javax.swing.ButtonGroup Ciphermode_AES;
    private javax.swing.ButtonGroup Ciphermode_RSA;
    private javax.swing.JRadioButton Decryption_Button_AES;
    private javax.swing.JRadioButton Decryption_Button_RSA;
    private javax.swing.JLabel Destination_Folder_AES;
    private javax.swing.JLabel Destination_Folder_RSA;
    private javax.swing.JTextField Destination_location_AES;
    private javax.swing.JTextField Destination_location_RSA;
    private javax.swing.JRadioButton Encryption_Button_AES;
    private javax.swing.JRadioButton Encryption_Button_RSA;
    private javax.swing.JLabel Exit;
    private javax.swing.JPanel Exit_Panel;
    private fileencryptionprogram.Round_Square Generate_key_AES;
    private fileencryptionprogram.Round_Square Generate_key_RSA;
    private javax.swing.JPanel HOME_PAGE;
    private javax.swing.JPanel HOME_PANEL;
    private javax.swing.JLabel Home;
    private javax.swing.JLabel Home1;
    private javax.swing.JLabel Key_Folder_AES;
    private javax.swing.JLabel Key_Folder_RSA;
    private javax.swing.JTextField Key_location_AES;
    private javax.swing.JTextField Key_location_RSA;
    private javax.swing.JPanel LEFT_OPTIONS_PANEL;
    private javax.swing.JLabel Minimize;
    private javax.swing.JPanel Minimize_Panel;
    private javax.swing.JPanel PAGE_TEMPLATE;
    private javax.swing.JLabel RSA;
    private fileencryptionprogram.Round_Square RSA_BEGIN_BUTTON;
    private javax.swing.JPanel RSA_PAGE;
    private javax.swing.JPanel RSA_PANEL;
    private javax.swing.JLabel Source_Folder_AES;
    private javax.swing.JLabel Source_Folder_RSA;
    private javax.swing.JTextField Source_location_AES;
    private javax.swing.JTextField Source_location_RSA;
    private javax.swing.JPanel TOP_EXIT_PANEL;
    private javax.swing.JLabel Title;
    private javax.swing.JLabel Title_Image;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private fileencryptionprogram.Round_Square round_Square1;
    private fileencryptionprogram.Round_Square round_Square10;
    private fileencryptionprogram.Round_Square round_Square2;
    private fileencryptionprogram.Round_Square round_Square5;
    private fileencryptionprogram.Round_Square round_Square6;
    private fileencryptionprogram.Round_Square round_Square7;
    private fileencryptionprogram.Round_Square round_Square8;
    private fileencryptionprogram.Round_Square round_Square9;
    // End of variables declaration//GEN-END:variables
}
